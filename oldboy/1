find /root/data/ -type f -exec rm -f {} \;
find /root/data/ -type f|xargs rm -f    #删除目录下所有类型为文件的文件，以上两种都可以       
find /root/data/ -type f  ! -name "a.txt" | xargs rm -f     #除了a.txt，目录下其他文件都删除
find /oldboy -maxdepth 1 -type d ! -name "oldboy"       
#maxdepth 深度，查找oldboy下的一级目录
#mtime 被modify过的档案
#atime 被access过的档案
#ctime 被change过状态的档案
#newer file 
#newer file 只要档案比file文件新，都会被列出来
    例：只保留7天前的数据，删除多余的,首先搭建测试环境，创建14个日志文件
    for n in `seq 14`
    do
        date -s "2015/08/$n"    #设定时间
        touch access_www_`(date +%F)`.log  #创建文件
    done
    date -s "2014/08/15" #由于要用mtime，特将时间设置成第15天
    结果：find /home/test/ -type f -name "access*.log" -mtime +7 | xargs rm -f      #没有目录不需要加r

touch file{1..10}    #一下子建立file1,file2,....file10 10个文件

head 取文件前N行，默认为10行，取前3行,-n 3 简写-3

tail    取文件后N行，默认最后10行，取最后3行 -n 3 -f 跟踪文件尾部的实时变化
    例：查看文件20-30行内容： head -30 test.txt | tail -11

grep -i 不区分大小写；-E 过滤多个字符串； -o 只输出精确匹配的字符而不是默认的整行
grep -v  排除   擅长过滤，把想要的或者不想要的分开
     -B #除了匹配的一行之外，并显示该行之前的num行
     -A #除了匹配的一行之外，并显示改行之后的num行
     -C #除了匹配的一行之外，并显示该行之前后num行   
    例：grep "string" -B 10 test.txt

sed -n '/过滤的内容/处理的命令' 文件    <== 擅长取行，替换 
    -n 取消sed的默认输出
    -i 改变文件内容
    处理的命令：p print打印 ， d delete删除   
    例：查看文件20-30行内容： sed -n '20,30p' test.txt

sed 替换
sed -i 's#oldboy#oldgirl#g' test.txt    #s常说的查找并替换，用一个字符串替换成另一个，g(global)与s联合使用时，表示对当前行全局匹配替换，"#"是分隔符，可以用/@等符号替换
    例：替换目录下所有test.txt文件中的oldboy替换成oldgirl        
    find ./ -type f -name "test.txt" | xargs sed -i 's#oldboy#oldgirl#g' 或者 sed -i 's#oldboy#oldgirl#g' `find ./ -type f -name "test.txt"`（效率高）

awk 一门语言，过滤内容（擅长取列）
    ls -lF | awk '/^d/'    #过滤文件夹
    awk '{print $1}' 文件  #$1 第一列，$2 第二列
    awk -F "分隔符号" ’{print $1}‘ /etc/passwd   # -F  指定分隔符，passwd中的“：”
    awk -F ":" '{print $1","$2","$3}' /etc/passwd   # $1 第一列 $2 第二列 ... $NF 最后一列 $(NF-1) 最后第二列
    awk '{if(NR<31 && NR>19) printf $1"\n"}' test.txt # NR代表行号， 查看文件20-30行内容

mkdir -p    #创建目录递归

rpm -ivh    #安装rpm包; 
    -qa     #查询rpm包

cp命令默认是不会确认覆盖的， alias 查找当前别名，事实上cp=cp -i , 写程序时可以用/bin/cp这样使用
alias 查看以及定义别名
unalias 取消别名（重启失效）
alias文件的位置，用户目录下.bashrc, 所有用户生效的位置 /etc/bashrc或者/etc/profile，然后source /etc/profiles

seq -s 指定序列的分隔符

通配符说明：
>   #输出重定向符，重定向内容到文件，清除已有的内容，然后加入新的内容，如果文件不存在还会创建文件
>>  #追加输出重定向符，>>追加内容到文件（中间无空格）,框里有一堆苹果，再加一个苹果，不同的是把苹果放到框里最下面
<   #输入重定向符 mail -s 'title' zhou3robin@126.com</etc/hosts,箭头朝向就是数据流方向
< <  #追加输入重定向符
|   #管道，egrep "3306|1521" /etc/services
\   #转义字符，让有意义的字符，脱掉他代表的意义。比如正则里$表示以...结尾，可以用\$表示$符号本身 grep "\\\$" test.txt
~   #当前用户的家目录
.或./   #一个点号是当前目录 其他功能,正则，任意单个字符
..或../ #两个点号是当前目录的上级目录
/   #根目录
;   #命令分隔符
{}  #生成字符或数字序列，一般配合echo等命令使用，find里的{}意思是前面命令的结果 echo {1..100}; echo {a..z}; mkdir stu{001..100}
!   # !+字母，表示调出最近一次以此字母开头的命令；!!表示使用最近一次操作的命令；!+数字，表示调出历史第几条命令
-   # 用户上一次所在的目录，由OLDPWD变量控制

Shell操作快捷键：
ctrl+a  #光标定位到命令首位
ctrl+e  #光标定位到命令末位
ctrl+u  #删除光标之前的内容
ctrl+k  #删除光标之后的内容
ctrl+shift+c    #复制    
ctrl+shif+v     #粘贴
ctrl+d  #退出当前用户环境
ctrl+l  #清屏

ps -ef  #查看进程 
netstat -lntup (ss) #查看端口
ifconfig (ip add)   #查看配置好的ip

uname -r 内核 
uname -m  x86 or x64 or arm

hostname 查看主机名 

useradd 会修改3个文件etc下面 shadow passwd group

PS1 可通过全局变量配置/etc/profile 文件调整PS1

su -  “-”代表把环境变量也切换过去    

selinux关闭
sed -i 's#SELINUX=enforcing#SELINUX=disabled#g' /etc/selinux/config 或直接 vim /etc/selinux/config
getenforce  #查看当前selinux状态
setenforce 0 #修改当前selinux状态

企业环境新装linux必要保留的开机项有5个: sshd,rsyslog,network,crond,sysstat
[root@localhost ~]# chkconfig --list 
    auditd              0:off   1:off   2:off   3:off   4:off   5:off   6:off
    blk-availability    0:off   1:on    2:off   3:off   4:off   5:off   6:off
    crond               0:off   1:off   2:on    3:on    4:on    5:on    6:off
    ip6tables           0:off   1:off   2:off   3:off   4:off   5:off   6:off
    iptables            0:off   1:off   2:on    3:on    4:on    5:on    6:off
    kdump               0:off   1:off   2:off   3:off   4:off   5:off   6:off
    lvm2-monitor        0:off   1:on    2:off   3:off   4:off   5:off   6:off
    mdmonitor           0:off   1:off   2:off   3:off   4:off   5:off   6:off
    mysqld              0:off   1:off   2:on    3:on    4:on    5:on    6:off
    netconsole          0:off   1:off   2:off   3:off   4:off   5:off   6:off
    netfs               0:off   1:off   2:off   3:off   4:off   5:off   6:off
    network             0:off   1:off   2:on    3:on    4:on    5:on    6:off
    postfix             0:off   1:off   2:off   3:off   4:off   5:off   6:off
    rdisc               0:off   1:off   2:off   3:off   4:off   5:off   6:off
    restorecond         0:off   1:off   2:off   3:off   4:off   5:off   6:off
    rsyslog             0:off   1:off   2:on    3:on    4:on    5:on    6:off
    saslauthd           0:off   1:off   2:off   3:off   4:off   5:off   6:off
    sshd                0:off   1:off   2:on    3:on    4:on    5:on    6:off
    udev-post           0:off   1:on    2:off   3:off   4:off   5:off   6:off

chkconfig --level 3 iptables off    #不加--level默认关闭2，3，4，5，可以连着写--level 2345

    例：停止在运行级别3中，除了sshd,network,rsyslog,crond,mysqld,iptables的其他启动服务。 
    1.可以用chkconfig一个个手动关闭
    2.用awk取第一列，用grep排除需要保留的服务，E表示过滤多个字符串，用for.do循环执行
    for name in `chkconfig --list|grep 3:on|awk '{print $1}'|grep -Ev "sshd|network|rsyslog|crond|mysqld|iptables"`;do chkconfig $name off;done
    3.用sed 
    chkconfig --list|grep 3:on|awk '{print $1}'|grep -Ev "sshd|network|rsyslog|crond|mysqld|iptables"|sed -r 's#(.*)#chkconfig \1 off#g'|bash 
    4.用awk
    chkconfig --list|grep 3:on|awk '{print $1}'|grep -Ev "sshd|network|rsyslog|crond|mysqld|iptables"|awk '{print "chkconfig " $1 " off"}' | bash

比较命令： 
diff    #比较,接两个文件
vimdiff #图形化界面比较
Beyond Compare  #windows下的比较工具

which   #查找命令所在路径，搜索范围来自全局变量PATH里对应的路径
临时修改 export PATH="/tmp:$PATH"，永久修改前面临时修改的命令放到/etc/profile下，使用source /etc/profile使得修改立即生效

/usr/sbin/ntpdate time.nist.gov     #时间同步
5分钟同步一次：
    echo "*/5 * * * * /usr/sbin/ntpdate time.nist.gov > /dev/null 2>&1" >> /var/spool/cron/root 
crontab -l  #查询任务
/dev/null   #空设备，黑洞
1>/dev/null 2>/dev/null
1>/dev/null 2>&1
&>/dev/null
 
export TMOUT=300    #为CRT终端设置超时
echo "export TMOUT=300" >> /etc/profile #永久设置
echo "export HISTSIZE=5" >> /etc/profile    #调整历史命令
echo "export HISTFILESIZE=5">> /etc/profile    #调整bash_history文件命令数量
history #显示历史纪录,-c清除所有记录，-d清除指定记录

文件描述符概念：
1.表示形式为整数数字，一般使用(0-65535)范围
2.进程使用的时候会占用文件描述符（标识打开的文件）
    ulimit -n   #查看默认文件描述符
3.调整文件描述符
    通过命令行 ulimit -SHn 65535
    通过放到开机自启动文件 /etc/rc.local
    通过改文件 echo '*    -    nofile    65533' >> /etc/security/limits.conf

/etc/sysctl.conf    #优化linux内核
sysctl -p 
http://blog.51cto.com/yangrong/1321594
http://blog.51cto.com/flandycheng/476769
http://www.ha97.com/4396.html
http://blog.51cto.com/oldboy/1336488

chattr +i   #锁定关键系统文件

tree    #显示目录结构   
tree -L 1 -d    #只显示一级目录,-L 显示层数；-d 显示目录

ls -lF  #用不同的符号把文件夹文件区别开来  ls -p 給目录加斜线
    例子：显示文件的行号（7种方法）
    1. nl nginx.conf
    2.cat -n nginx.conf
    3.less -N nginx.conf
    4.vim nginx.conf 然后执行:set nu :set nonu 取消行号
    5.grep -n "." nginx.conf
    6.awk '{print NR,$0}' nginx.conf  #NR 表示行号，$0表示整行内容
    7.sed '=' nginx.conf

crontab修改默认编辑器,crontab默认编辑器为nano.修改crontab默认编辑器为vi或者其他的编辑器。
方法1：
export EDITOR="/usr/bin/vim" ; crontab -e
方法2：
执行命令：select-editor